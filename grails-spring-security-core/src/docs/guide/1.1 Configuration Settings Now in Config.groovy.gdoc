Unlike the Acegi plugin, which used its own configuration file, @SecurityConfig.groovy@, the Spring Security plugin maintains its configuration in the standard @Config.groovy@ file. Default values are in the plugin's @grails-app/conf/DefaultSecurityConfig.groovy@ file, and you add application-specific values to the @grails-app/conf/Config.groovy@ file. The two configurations will be merged, with application values overriding the defaults. 

This structure enables environment-specific configuration such as, for example, fewer structure-restrictive security rules during development than in production. Like any environment-specific configuration parameters, you wrap them in an @environments@ block.

{note}
The plugin's configuration values all start with @grails.plugins.springsecurity@ to distinguish them from similarly named options in Grails and from other plugins. You must specify all property overrides with the @grails.plugins.springsecurity@ suffix. For example, you specify the attribute @password.algorithm@ as: 

{code}
grails.plugins.springsecurity.password.algorithm='SHA-512'
{code}

in @Config.groovy@
{note}

