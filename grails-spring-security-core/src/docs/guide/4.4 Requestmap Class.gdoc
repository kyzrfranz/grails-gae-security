Optionally, use this class to store request mapping entries in the database instead of defining them with annotations or in @Config.groovy@. This option makes  the class configurable at runtime; you can add, remove and edit rules without restarting your application.

{table}
*Property* | *Default Value* | *Meaning*
requestMap.className | 'Requestmap' | requestmap class name
requestMap.urlField | 'url' | URL pattern field name
requestMap.configAttributeField | 'configAttribute' | authority pattern field name
{table}

Assuming you choose @com.mycompany.myapp@ as your package, and @Requestmap@ as your class name, you'll generate this class:

{code}
package com.testapp

class Requestmap {

   String url
   String configAttribute

   static mapping = {
      cache true
   }

   static constraints = {
      url blank: false, unique: true
      configAttribute blank: false
   }
}
{code}

To use Requestmap entries to guard URLs, see [Requestmap Instances Stored in the Database|guide:5.3 Requestmap Instances Stored in the Database].
